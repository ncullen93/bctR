% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Modularity.R
\name{UNC.modularity.louvain.und.sign}
\alias{UNC.modularity.louvain.und.sign}
\title{Louvain Algorithm on Undirected Signed Graphs}
\usage{
UNC.modularity.louvain.und.sign(W, gamma = 1, qtype = "sta", seed = NA)
}
\arguments{
\item{W}{: a Matrix - undirected weighted/binary connection
matrix with positive and negative weights}

\item{gamma}{: a float - resolution parameter, default value = 1.
Values 0 <= gamma < 1 detect larger modules while gamme > 1 detects
smaller modules}

\item{qtype}{: a string - can be 'sta' (default), 'pos', 'smp',
'gja', 'neg'. See Rubinov and Sporns (2011) for a description.}

\item{seed}{: an integer - the random seed}
}
\value{
ciQ : a list - two elements where element one is 'ci',
a vector (refined community affiliation network), and element
two is 'Q', a float (optimized modularity metric)
}
\description{
The optimal community structure is a subdivision of the
network into non-overlapping groups of nodes in a way that
maximizes the number of within-group edges, and minimizes the
number of between-group edges. The modularity is a statistic
that quantifies the degree to which the network may be
subdivided into clearly delineated groups.
}
\details{
The Louvain algorithm is a fast and accurate community
detection algorithm.

Use this function as opposed to the modularity.louvain.und()
only if hte network contains a mix of positive and negative
weights. If the network contains all positive weights, the
output of the two functions will be equivalent.

Note: Function is not validated/running yet.
}

