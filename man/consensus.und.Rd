% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Clustering.R
\name{consensus.und}
\alias{consensus.und}
\title{Consensus of a Graph}
\usage{
consensus.und(D, tau, reps = 1000)
}
\arguments{
\item{D}{: a matrix - agreement matrix with entries between [0,1]
denoting the probability of finding node i in the same cluster as node j.}

\item{tau}{: a float - threshold which controls the resolution of the
reclustering}

\item{reps}{: an integer - number of times the clustering algorithm is
reapplied. Default value is 1000}
}
\value{
ciu : a vector - the consensus partition
}
\description{
This algorithm seeks a consensus partition of the agreement
matrix D. The algorithm used here is almost identical to the 
one introduced in Lancichinetti & Fortunato (2012): The agreement
matrix D is thresholded at a level TAU to remove any weak elements.
The resulting matrix is then partitioned REPS number of times using
the Louvain algorithm (in principle, any clustering algorithm that
can handle weighted matrices is a sutiable alternative to the Louvain
algorithm and can be subsituted in its place). This clustering
produces a set of partitions from which a new agreement is built. If
the partitions have not converged to a single representative partition,
the above process repeats itself, starting with the newly built
agreement matrix.
}
\details{
Note: In this implementation, the elements of the agreemenet matrix
must be converted into probabilities.

Note: This implementation is slightly different from the original
algorithm proposed by Lancichinetti & Fortunato. In its original
version, if the thresholding produces singleton communities, those
nodes are reconnected to the network. Here, we leave any singleton
communities disconnected.
}

