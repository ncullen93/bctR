% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Modularity.R
\name{UNC.modularity.louvain.und}
\alias{UNC.modularity.louvain.und}
\title{Louvain Modularity Algorithm on Undirected Graph}
\usage{
UNC.modularity.louvain.und(W, gamma = 1, hierarchy = FALSE, seed = NA)
}
\arguments{
\item{W}{: a Matrix - undirected weighted/binary connection matrix}

\item{gamma}{: a float - resolution parameter. default value=1. 
Values 0 <= gamma < 1 detect larger modules while gamma > 1 
detects smaller modules.}

\item{hierarchy}{: a boolean - enables hier. output}

\item{seed}{: an integer - random seed}
}
\value{
ciQ : a list - two elements where element one is 'ci',
a vector (refined community affiliation network), and element
two is 'Q', a float (optimized modularity metric).If hierarchical 
output enabled, becomes an Hx1 array of floats instead.
}
\description{
The optimal community structure is a subdivision of the network into
nonoverlapping groups of nodes in a way that maximizes the number of
within-group edges, and minimizes the number of between-group edges.
The modularity is a statistic that quantifies the degree to which the
network may be subdivided into such clearly delineated groups.
}
\details{
The Louvain algorithm is a fast and accurate community detection
algorithm (as of writing). The algorithm may also be used to detect
hierarchical community structure.

R Microbenchmark - Fast enough..
Unit: milliseconds
expr      min       lq     mean   median       uq      max neval
fun    8.890078 11.65477 12.90705 12.62741 13.85725 19.57911   100

WITH compile::cmpfun() - Fast!
Unit: milliseconds
expr      min       lq     mean   median       uq      max neval
fun    6.015344 7.543102 9.385713 9.529057 10.69335 13.49019   100

Note: Function is not validated yet.
}

